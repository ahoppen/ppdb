#if !canImport(ObjectiveC)
import XCTest

extension TypeCheckerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TypeCheckerTests = [
        ("testCannotAssignBoolToIntVariable", testCannotAssignBoolToIntVariable),
        ("testCannotDeclareIntVariableWithBoolValue", testCannotDeclareIntVariableWithBoolValue),
        ("testIfConditionCannotBeInt", testIfConditionCannotBeInt),
        ("testObserverConditionCannotBeInt", testObserverConditionCannotBeInt),
        ("testTypeCheckerSuccess", testTypeCheckerSuccess),
        ("testTypeCheckerVisitsLoopBody", testTypeCheckerVisitsLoopBody),
        ("testWhileConditionCannotBeInt", testWhileConditionCannotBeInt),
    ]
}

extension VariableResolverTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VariableResolverTests = [
        ("testCanUseVariablesFromOuterScope", testCanUseVariablesFromOuterScope),
        ("testFindsDoubleDeclaration", testFindsDoubleDeclaration),
        ("testFindsRecursiveVarDecl", testFindsRecursiveVarDecl),
        ("testFindsUseBeforeDefine", testFindsUseBeforeDefine),
        ("testVariableNotValidAfterBlock", testVariableNotValidAfterBlock),
        ("testVariableResolverSuccess", testVariableResolverSuccess),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(TypeCheckerTests.__allTests__TypeCheckerTests),
        testCase(VariableResolverTests.__allTests__VariableResolverTests),
    ]
}
#endif
